import telebot
from telebot import types

API_TOKEN = "YOUR_API_TOKEN"

bot = telebot.TeleBot(API_TOKEN)

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add(types.KeyboardButton('üìú –ö–∞—Ç–∞–ª–æ–≥'))
main_menu.add(types.KeyboardButton('üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'))
main_menu.add(types.KeyboardButton('üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º'))
main_menu.add(types.KeyboardButton('‚ùì –ü–æ–º–æ—â—å'))

# –ú–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞
catalog_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
catalog_menu.add(types.KeyboardButton('–ö–æ–∂–∞–Ω—ã–µ —Å—É–º–∫–∏'))
catalog_menu.add(types.KeyboardButton('–ö–æ—à–µ–ª—å–∫–∏'))
catalog_menu.add(types.KeyboardButton('–†–µ–º–Ω–∏'))
catalog_menu.add(types.KeyboardButton('–ë—Ä–∞—Å–ª–µ—Ç—ã'))
catalog_menu.add(types.KeyboardButton('üîô –ù–∞–∑–∞–¥'))

# –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
items = {
    '–ö–æ–∂–∞–Ω—ã–µ —Å—É–º–∫–∏': '\n 1 - —à–æ–ø–ø–µ—Ä\n 2 - –ø–æ—è—Å–Ω–∞—è',
    '–ö–æ—à–µ–ª—å–∫–∏': '\n 1 - –±–∏—Ñ–æ–ª–¥\n 2 - –ø–æ—Ä—Ç–º–æ–Ω–µ',
    '–†–µ–º–Ω–∏': '\n 1 - –±—Ä—é—á–Ω—ã–π\n 2 - –¥–ª—è –¥–∂–∏–Ω—Å',
    '–ë—Ä–∞—Å–ª–µ—Ç—ã': '\n 1 - –º—É–∂—Å–∫–∏–µ\n 2 - –∂–µ–Ω—Å–∫–∏–µ'
}

# –§–ª–∞–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
is_ordering = False
is_contacting_operator = False


# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    global is_ordering, is_contacting_operator
    is_ordering = False
    is_contacting_operator = False
    bot.send_message(
        message.chat.id,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –∏–∑–¥–µ–ª–∏–π –∏–∑ –∫–æ–∂–∏ —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã!\n–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=main_menu
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üìú –ö–∞—Ç–∞–ª–æ–≥"
@bot.message_handler(func=lambda message: message.text == 'üìú –ö–∞—Ç–∞–ª–æ–≥')
def show_catalog(message):
    global is_ordering, is_contacting_operator
    is_ordering = False
    is_contacting_operator = False
    bot.send_message(
        message.chat.id,
        "–í–æ—Ç –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=catalog_menu
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ç–∞–ª–æ–≥–∞
@bot.message_handler(func=lambda message: message.text in items.keys())
def show_item_description(message):
    global is_ordering, is_contacting_operator
    is_ordering = False
    is_contacting_operator = False
    item = message.text
    description = items[item]
    bot.send_message(
        message.chat.id,
        f'{item}\n\n{description}\n\n–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∂–º–∏—Ç–µ "–ù–∞–∑–∞–¥" –∏ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"',
        reply_markup=catalog_menu
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üîô –ù–∞–∑–∞–¥"
@bot.message_handler(func=lambda message: message.text == 'üîô –ù–∞–∑–∞–¥')
def go_back(message):
    global is_ordering, is_contacting_operator
    is_ordering = False
    is_contacting_operator = False
    bot.send_message(
        message.chat.id,
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=main_menu
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"
@bot.message_handler(func=lambda message: message.text == 'üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')
def order_item(message):
    global is_ordering, is_contacting_operator
    is_ordering = True
    is_contacting_operator = False
    bot.send_message(
        message.chat.id,
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.\n–ü—Ä–∏–º–µ—Ä: –°—É–º–∫–∞ 1 - 1 —à—Ç."
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"
@bot.message_handler(func=lambda message: message.text == 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º')
def contact_operator(message):
    global is_ordering, is_contacting_operator
    is_ordering = False
    is_contacting_operator = True
    bot.send_message(
        message.chat.id,
        "–ù–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ."
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "‚ùì –ü–æ–º–æ—â—å"
@bot.message_handler(func=lambda message: message.text == '‚ùì –ü–æ–º–æ—â—å')
def help_user(message):
    global is_ordering, is_contacting_operator
    is_ordering = False
    is_contacting_operator = False
    bot.send_message(
        message.chat.id,
        "–£–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ leatherworkshop.com",
        reply_markup=main_menu
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –º–µ–Ω—é –∑–∞–∫–∞–∑–∞ –∏ —Å–≤—è–∑–∏ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
@bot.message_handler(func=lambda message: True)
def handle_messages(message):
    global is_ordering, is_contacting_operator
    if is_ordering or is_contacting_operator:
        bot.send_message(
            message.chat.id,
            "–í–∞—à –∑–∞–ø—Ä–æ—Å –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞."
        )
    else:
        bot.send_message(
            message.chat.id,
            "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é."
        )


bot.polling()
